#!/bin/bash

        rm -f $NOTES_DIR/action_items.md
        filenum=0
        find $NOTES_DIR -name '*.md' \
            -execdir grep -r -i -Hn "\- \[ \]" \{} + |  \
             #sed 's/^..//' | \
             sed s/./'|'/23 | \
             sed 's/\(.*\)[:]/\1|/' | \
             awk 'BEGIN {FS="|"; OFS="\t"} {print $1, $2, $3}' | \
             #awk 'BEGIN {FS="\t"; OFS="\t"} {gsub(/\:|\"|\047/,"",$3)}1' | \

             awk 'BEGIN {FS="\t"; OFS="\t"; srand()}
                {
                    # Strip unwanted characters
                    gsub(/\:|\"|\047/,"",$3);
                
                    # Check for the pattern followed by a 5-character key containing at least one digit
                    if ($3 ~ /- \[ \] *[A-Z0-9].*/) {
                        print $1, $2, $3;
                    } else {
                        # Generate a random 5-character alphanumeric key ensuring at least one character is a digit
                        new_key = "";
                        digit_placed = 0;  # Flag to ensure at least one digit is included
                
                        for (i=1; i<=5; i++) {
                            if (i == 5 && digit_placed == 0) {
                                # Ensure last character is a digit if none have been placed
                                new_key = new_key substr("0123456789", int(rand() * 10) + 1, 1);
                            } else {
                                # Randomly choose between a digit and a letter
                                if (int(rand() * 2)) {
                                    # Append a digit
                                    new_key = new_key substr("0123456789", int(rand() * 10) + 1, 1);
                                    digit_placed = 1;
                                } else {
                                    # Append a letter
                                    new_key = new_key substr("ABCDEFGHIJKLMNOPQRSTUVWXYZ", int(rand() * 26) + 1, 1);
                                }
                            }
                        }
                        # Insert the new key right after the "- [ ]"
                        sub(/- \[ \]/, "& " new_key, $3);
                        print $1, $2, $3;
                    }
                }' |
                sort -k1 >> $NOTES_DIR/action_items.md

        
        #open_note $NOTES_DIR/action_items.md
        nano "$@" $NOTES_DIR/action_items.md

        # Replace the placeholder YOUR_FILE.txt with your actual file name containing the entries
        input_file=$NOTES_DIR/action_items.md

        # Reading each line from the file
        while IFS= read -r line; do

            rel_file_path=$(echo "$line" | awk -F'\t' '{print $1}')
            line_number=$(echo "$line" | awk -F'\t' '{print $2}')
            new_content=$(echo "$line" | awk -F'\t' '{$1=$2=""; print substr($0, 3)}')

            file_path=$NOTES_DIR/$rel_file_path

            # Check if the file exists before attempting to edit
            if [ -f "$file_path" ]; then
                # Use awk to replace the line and output to a temporary file
                awk -v line_num="$line_number" -v new_line="$new_content" 'NR == line_num {$0=new_line} {print}' "$file_path" > temp_file.md
                # Move the temporary file to original file
                mv temp_file.md "$file_path"
            else
                echo "File not found: $file_path"
            fi
        done < "$input_file"

        rm -f $NOTES_DIR/action_items.md
        #actions --update 